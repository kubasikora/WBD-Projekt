from flask import Flask, Response, request
from flask_cors import CORS
import cx_Oracle
import json

app = Flask(__name__)
CORS(app)


@app.route('/')
def hello_world():
    con = cx_Oracle.connect("rwojtas", "rwojtas", cx_Oracle.makedsn("194.29.160.131", 1521, "ora3inf"))
    print(con.version)
    return 'Hello World!<br>connection version: <br>' + con.version


@app.route('/incoming_matches')
def show_incoming_matches():
    con = cx_Oracle.connect("rwojtas", "rwojtas", cx_Oracle.makedsn("194.29.160.131", 1521, "ora3inf"))
    cur = con.cursor()
    cur.execute(
        'select "MeczId", extract(year from m."DataRozpoczecia"), extract(month from m."DataRozpoczecia"), extract(day from m."DataRozpoczecia"), dh."Nazwa", da."Nazwa", st."Nazwa", ref."Imie", ref."Nazwisko", t."Nazwa", w."WynikGospodarzy", w."WynikGosci"  from "Mecze" m join "Druzyny" dh on dh."DruzynaId"=m."DruzynaGospodarzyId" join "Druzyny" da on da."DruzynaId"= m."DruzynaGosciId" join "Stadiony" st on st."StadionId" = m."StadionId" join "Sedziowie" ref on ref."SedziaId" = m."SedziaId" join "Turnieje" t on t."TurniejId" = m."TurniejId" join "Wyniki" w on w."WynikId" = m."WynikId" where m."WynikId" IS NULL')

    resp = cur.fetchmany(numRows=10)
    return Response(json.dumps(resp), mimetype='application/json')


@app.route('/finished_matches')
def show_finished_matches():
    # sqlQuery = 'select * from "Mecze" m join "Druzyny" dh on dh."DruzynaId"=m."DruzynaGospodarzyId" join "Druzyny" da on da."DruzynaId"= m."DruzynaGosciId" join "Stadiony" s on s."StadionId" = m."StadionId" join "Sedziowie" ref on ref."SedziaId" = m."SedziaId" join "Turnieje" t on t."TurniejId" = m."TurniejId" join "Wyniki" w on w."WynikId" = m."WynikId" where m."WynikId" IS NOT NULL;'

    con = cx_Oracle.connect("rwojtas", "rwojtas", cx_Oracle.makedsn("194.29.160.131", 1521, "ora3inf"))
    cur = con.cursor()
    cur.execute('select "MeczId", extract(year from m."DataRozpoczecia"), extract(month from m."DataRozpoczecia"), extract(day from m."DataRozpoczecia"), dh."Nazwa", da."Nazwa", st."Nazwa", ref."Imie", ref."Nazwisko", t."Nazwa", w."WynikGospodarzy", w."WynikGosci"  from "Mecze" m join "Druzyny" dh on dh."DruzynaId"=m."DruzynaGospodarzyId" join "Druzyny" da on da."DruzynaId"= m."DruzynaGosciId" join "Stadiony" st on st."StadionId" = m."StadionId" join "Sedziowie" ref on ref."SedziaId" = m."SedziaId" join "Turnieje" t on t."TurniejId" = m."TurniejId" join "Wyniki" w on w."WynikId" = m."WynikId" where m."WynikId" IS NOT NULL')

    resp = cur.fetchmany(numRows=10)
    return Response(json.dumps(resp), mimetype='application/json')


@app.route('/sign_in')
def sign_in_operation():
    #ogin = "robart"
    #password = "robar123"
    try:
        login = request.args.get("login")
        password = request.args.get("password")
    except ValueError:
        resp = {
            "error": True,
            "message": "Invalid arguments"
        }

    con = cx_Oracle.connect("rwojtas", "rwojtas", cx_Oracle.makedsn("194.29.160.131", 1521, "ora3inf"))
    cur = con.cursor()

    cur.execute('select "UzytkownikId", "Login", "Imie", "Nazwisko" from "Uzytkownicy" where "Login"=' + "'" + login + "'" + ' and "Haslo"=' + "'" + password + "'")

    resp = cur.fetchone()
    return Response(json.dumps(resp), mimetype='application/json')

@app.route("/tournaments")#, methods=['POST'])
def sign_up_for_tournament():
    '''if request.method == 'POST'
        try:
            #tournament = int(request.args.get("TurniejId"))
            #user = int(request.args.get("UzytkownikId"))



            con = cx_Oracle.connect("rwojtas", "rwojtas", cx_Oracle.makedsn("194.29.160.131", 1521, "ora3inf"))
            cur = con.cursor()

            resp = cur.execute('insert into "ZapisyUzytkownikow" values(' + str(user) + ', ' + str(tournament) + ')')

        except ValueError:a
            resp = {
                "error": True,
                "message": "Invalid arguments"
            }'''
    tournament = 1
    user = 1

    insert = [(user, tournament)]

    con = cx_Oracle.connect("rwojtas", "rwojtas", cx_Oracle.makedsn("194.29.160.131", 1521, "ora3inf"))
    cur = con.cursor()

    statement = 'insert into "ZapisyUzytkownikow"("UzytkownikId", "TurniejId") values (:1, :2)'
    cur.execute(statement, (str(user), str(tournament)))
    con.commit()
    return Response(json.dumps('ok'), mimetype='application/json')

if __name__ == '__main__':
    app.run()
